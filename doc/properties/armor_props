Common Properties used by Armor

Armor uses all the properties defined by standard objects. In addition, they
also use the following special properties:

type. type is a string which controls where the armor is worn on the body.
Typical types are "suit", "shield", "helmet", "gloves". Only one piece of
armor of each type may be worn. There is no restriction on what this
property may be set to. If you want to, you can create a function in armor.c
called set_type() which will check what this property is set to and compare
it against a predefined list of acceptable types. The default mudlib doesn't
do this but it is not hard to add. (Calls to set("type") will be redirected
to set_type(); see the object documentation for details.)

armor. armor is an integer which is the defensive rating of the armor. An
object with armor=0 cannot be equipped. 1 is paper-mache, 10 is quite good,
and 20 is battle-tank armor in the default mudlib. You can change the
interpretation of the armor property by changing the combat
formula.

equipped. equipped is an integer which is 1 if the armor is currently
equipped by a player and is 0 otherwise.

equip_func. equip_func is a string: if defined, the function by that
name will be called immediately after the armor is equipped.

unequip_func. unequip_func is a string: if defined, the function by thatname will be called immediately after the armor is unequipped.
