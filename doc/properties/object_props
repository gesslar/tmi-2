Commonly Used Properties in Standard Objects

short. The short property is a string which is the short description of the
object. set ("short", "foo") replaces set_short("foo") in most applications.

long. the long property is a string which is the long description of the
object. set ("long", "bar") replaces set_long("bar") in most applications.

id. The id property is an array of strings which are the names to which the
object will respond via the present() efun. set ("id", ({ "biff", "bam",
"kappow }) ) replaces set_id (({ "biff", "bam", "kapow" })) for most
applications.

light. The light property is an integer which is 1 if the object is a light
source and 0 if it is not. set ("light", 1) replaces set_light(1) in most
applications.

mass. The mass property is an integer which gives the mass of the object.
In the default mudlib the mass of the player is 7500, although you can
change the scale to anything you like. Players are limited to carrying 5000
mass units, and you can change this too.

bulk. The bulk property is an integer which gives the bulk of the object.
In the default mudlib, a player bulks 1000 and can carry up to 500 bulk
units. You can change these values if you like.

invisible. invisible is an integer which determines whether the object can be
seen by players, wizards, or neither. If an object has invis level 0, then
anyone can see it. If it has invis level 1, then players cannot see it. If
it has invis level 2, then only admins can see it.
In addition, messages sent by invisible objects will not be received by objects
that can't see them. This can make for a highly dangerous situation, since an
invisible monster could attack a player and the player would not know
that he was being attacked. Be careful. We hope to improve this in the
future.
 
prevent_drop.  This property allows an object to prevent itself from being
dropped by its holder.  This can be used for things like curses or guild
object which must never leave the user.
 
prevent_get.  This property prevents any user from getting this object from
its present position.  This can be used by such things as bulletin boards
or signs that you don't want players walking away with.
 
prevent_insert.  This property prevents the object from being placed inside
another object, such as a bag.
 
extra_look. Extra_look is a string which stores a description that is added
to the carrying user's description. This is useful for things like curses
where one would want anyone seeing the user to know they are cursed.

silent_look. Silent_look is an integer which is used by the look command
to determine whether the surrounding room (and that object) will be notified
that the player is look at it. Thus, if silent_look = 1, then it will not
display the "look" messages to the surroundings.
 
